#!/bin/sh
resize_img(){
    #imgsize="$(monitors_info.sh -d 'HDMI-1')"
    #imgsize="1080x1920"
    #convert "$file" -resize "${imgsize}"^ -gravity Center -extent "${imgsize}" "$file"
    local file_location=$(dirname $(realpath ${file}))
    monitor="$(grep -o "ultra\|rotated" <<< "${file_location}")"


    case "$monitor" in
        "rotated")
            imgsize="1080x1920";;
        "ultra")
            imgsize="2560x1080";;
        *)  
            imgsize="1920x1080";;
    esac

    convert "$file" -resize "${imgsize}"^ -gravity Center -extent "${imgsize}" "$file"
}

resize_img_plus(){
    filename="$(basename $file)"
    temp_file="rec_$filename"

    local htop=$(monitors_info.sh -d | awk 'BEGIN {FS="x"} {if ($2 > TESTE) TESTE=$2;} END {print TESTE+100}')
    local optimal_rescale="$(monitors_info.sh -D)x${htop}"

    direction="$(printf "Center\nSouth\nNorth\nWest\nEast\nNorthWest\nSouthWest\nNorthEast\nSouthEast\nForget\nNone" | dmenu -p "Choose the direction")"
    imgsize="$(printf "${optimal_rescale}\n5120x3250\n4480x1280\n3640x1920\n3000x2660" | dmenu -p "Choose the dimension")"

    adjust="$(printf "+0\n+65\n+100\n+200\n+300" | dmenu -p "Set the adjustment")"

    convert "$file" -resize "${imgsize}"^ -quality 100 -gravity ${direction} -extent "${imgsize}+0+${adjust}" "/tmp/$temp_file"

    cd /tmp/

    sxiv $temp_file &
}

crop_img(){
    monitor=$(monitors_info.sh -n "$1")
    index="$2"
    gravity="$3"

    direction="$(printf "Center\nSouth\nNorth\nWest\nEast\nNorthWest\nSouthWest\nNorthEast\nSouthEast\nForget\nNone" | dmenu -p "Choose the direction")"
    resize="$(printf "+0\n+65\n+100\n+200\n+300" | dmenu -p "Set the vertical deviation")"
    horizontal="$(printf "+0\n-100\n+100\n+200\n+300" | dmenu -p "Set the horizontal deviation")"
    
    filename="$(basename $file)"

    temp_file="/tmp/tmp_$filename"

    rescale_dim="$(monitors_info.sh -D)x$(monitors_info.sh -d "${monitor}" | awk 'BEGIN {FS="x"}; {print $2}')"

    xvalue="$(monitors_info.sh -d "${monitor}" | awk 'BEGIN {FS="x"}; {print $1}')"
    yvalue="$(monitors_info.sh -d "${monitor}" | awk 'BEGIN {FS="x"}; {print $2}')"

    convert "$file" -filter Triangle -gravity ${direction} -resize "${rescale_dim}"^ -extent "${rescale_dim}${horizontal}${resize}" -quality 100 "${temp_file}"

    # Resize to the choosen monitor
    file_location="/tmp/crp_${index}_${filename}"
    convert "${temp_file}" -filter Triangle -resize ${xvalue}x${yvalue}^ -gravity ${gravity} -extent "${xvalue}x${yvalue}" -quality 100 "${file_location}"
    sxiv "${file_location}"&
    #nitrogen --head=${index} --save --set-scaled "${file_location}"
}

while read file
do
    case "$1" in
        #"C-r")
            #convert -rotate 90 "$file" "$file" ;;
        "C-c")
            echo -n "$file" | xclip -selection clipboard ;;
        "C-w")
            nitrogen --save --set-zoom-fill "$file" ;;
        "C-r") 
            resize_img_plus "$file";;
        "C-p") 
            resize_img "$file";;
        "C-t")
            crop_img "0" "0" "West";;
        "C-y")
            crop_img "1" "0" "East";;
        "C-i")
            convert -flop "$file" "$file";;
        "C-s")
            mv "$file" $HOME/Documents/Pictures/Wallpapers/ultra/shabbat/ ;;
        "C-l")
            cp "$file" $HOME/Documents/Pictures/lock.png ;;
        "C-n")
            mv "$file" $HOME/Documents/Pictures/Wallpapers/night/ ;;
        "C-d")
            mv "$file" $HOME/Documents/Pictures/Wallpapers/day/ ;;
        "C-0")
            nitrogen --head=0 --save --set-scaled --random "$file"
            python $HOME/bin/qtile/wallpapers.py "$file" 0;;
        "C-1")
            nitrogen --head=1 --save --set-scaled --random "$file"
            python $HOME/bin/qtile/wallpapers.py "$file" 1;;
        "C-2")
            nitrogen --head=2 --save --set-scaled --random "$file"
            python $HOME/bin/qtile/wallpapers.py "$file" 2;;
        "C-a")
            rm "$file" ;;
    esac
done
