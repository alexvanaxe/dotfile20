#!/bin/sh
resize_img(){
    #imgsize="$(monitors_info.sh -d 'HDMI-1')"
    #imgsize="1080x1920"
    #convert "$file" -resize "${imgsize}"^ -gravity Center -extent "${imgsize}" "$file"
    local file_location=$(dirname $(realpath ${file}))
    monitor="$(grep -o "ultra\|rotated" <<< "${file_location}")"


    case "$monitor" in
        "rotated")
            imgsize="1080x1920";;
        "ultra")
            imgsize="2560x1080";;
        *)  
            imgsize="1920x1080";;
    esac

    convert "$file" -resize "${imgsize}"^ -gravity Center -extent "${imgsize}" "$file"
}

crop_img(){
    rescale_dim="$(monitors_info.sh -D)x$(monitors_info.sh -d "$(monitors_info.sh -p)" | awk 'BEGIN {FS="x"}; {print $2}')"

    convert "$file" -resize "${rescale_dim}"^ -gravity Center -extent "${rescale_dim}" "tmp_$file"

    imgsize="$(monitors_info.sh -d "$(monitors_info.sh -p)")"

    convert "tmp_$file" -crop ${imgsize} -gravity West "crp_${file}"

    rm "tmp_${file}"

    crop_rimg $file
}

crop_rimg(){
    local rotable="DP-1"
    rotated_w="$(monitors_info.sh -D)-$(echo "$(monitors_info.sh -d ${rotable})" | sed 's/x/-/' | bc)"
    rotated_w=$(echo ${rotated_w} | bc)

    rescale_dim="$(echo ${rotated_w})x$(echo $(monitors_info.sh -d ${rotable}) | awk 'BEGIN {FS="x"} ; {print $1}')"

    echo $rescale_dim

    #Normalizing width to further crop resize to work
    convert "$file" -resize "${rescale_dim}"^ -gravity Center -extent "${rescale_dim}" "tmp_$file"

    convert "$file" -resize "1080x1920"^ -gravity East -extent "1080x1920" "crp_$(basename -s .jpg $file)-2.jpg"

    #rescale_dim="$(monitors_info.sh -D)x$(monitors_info.sh -d "$(monitors_info.sh -p)" | awk 'BEGIN {FS="x"}; {print $2}')"
    #Normalizing width to further crop resize to work
    #convert "tmp_$file" -resize "${rescale_dim}"^ -gravity Center -extent "${rescale_dim}" "tmp_$file"


    #imgsize="$(monitors_info.sh -d "$(monitors_info.sh -p)")"
    #convert "tmp_$file" -crop ${imgsize} -gravity West "crp_${file}"

    rm "tmp_$file"
    #rm *-1.jpg

}


while read file
do
    case "$1" in
        "C-r")
            convert -rotate 90 "$file" "$file" ;;
        "C-c")
            echo -n "$file" | xclip -selection clipboard ;;
        "C-w")
            nitrogen --save --set-zoom-fill "$file" ;;
        "C-p") 
            resize_img "$file";;
        "C-o")
            crop_img "$file";;
        "C-i")
            crop_rimg "$file";;
        "C-s")
            mv "$file" $HOME/Documents/Pictures/Wallpapers/ultra/shabbat/ ;;
        "C-l")
            cp "$file" $HOME/Documents/Pictures/lock.png ;;
        "C-n")
            mv "$file" $HOME/Documents/Pictures/Wallpapers/night/ ;;
        "C-d")
            mv "$file" $HOME/Documents/Pictures/Wallpapers/day/ ;;
        "C-0")
            nitrogen --head=0 --save --set-scaled --random "$file"
            python $HOME/bin/qtile/wallpapers.py "$file" 0;;
        "C-1")
            nitrogen --head=1 --save --set-scaled --random "$file"
            python $HOME/bin/qtile/wallpapers.py "$file" 1;;
        "C-2")
            nitrogen --head=2 --save --set-scaled --random "$file"
            python $HOME/bin/qtile/wallpapers.py "$file" 2;;
        "C-a")
            rm "$file" ;;
    esac
done
