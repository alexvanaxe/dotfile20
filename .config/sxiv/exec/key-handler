#!/bin/sh
resize_img(){
    #imgsize="$(monitors_info.sh -d 'HDMI-1')"
    #imgsize="1080x1920"
    #convert "$file" -resize "${imgsize}"^ -gravity Center -extent "${imgsize}" "$file"
    local file_location=$(dirname $(realpath ${file}))
    monitor="$(grep -o "ultra\|rotated" <<< "${file_location}")"


    case "$monitor" in
        "rotated")
            imgsize="1080x1920";;
        "ultra")
            imgsize="2560x1080";;
        *)  
            imgsize="1920x1080";;
    esac

    convert "$file" -resize "${imgsize}"^ -gravity Center -extent "${imgsize}" "$file"
}

crop_imgs(){
    # Rescaling to match all monitors

    rm /tmp/tmp_*
    rm /tmp/crp_*

    crop_img "HDMI-1" "0" "West" "$direction"
    crop_img "DP-1" "1" "East" "$direction"
    #crop_rimg "DP-1" "2" "East"
    #crop_rimg "HDMI-1" "3" "West"
}

crop_img(){
    monitor="$1"
    index="$2"
    gravity="$3"

    direction="$(printf "Center\nSouth\nNorth\nWest\nEast\nNorthWest\nSouthWest\nNorthEast\nSouthEast\nForget\nNone" | dmenu -p "Choose the direction")"
    resize="$(printf "+0\n+100\n+200\n+300" | dmenu -p "Set the vertical deviation")"
    horizontal="$(printf "+0\n+100\n+200\n+300" | dmenu -p "Set the horizontal deviation")"

    temp_file="/tmp/tmp_$file"

    rescale_dim="$(monitors_info.sh -D)x$(monitors_info.sh -d "${monitor}" | awk 'BEGIN {FS="x"}; {print $2}')"

    xvalue="$(monitors_info.sh -d "${monitor}" | awk 'BEGIN {FS="x"}; {print $1}')"
    yvalue="$(monitors_info.sh -d "${monitor}" | awk 'BEGIN {FS="x"}; {print $2}')"

    convert "$file" -filter Triangle -gravity ${direction} -resize "${rescale_dim}"^ -extent "${rescale_dim}${horizontal}${resize}" -quality 100 "${temp_file}"

    # Resize to the choosen monitor
    file_location="/tmp/crp_${index}_${file}"
    convert "${temp_file}" -filter Triangle -resize ${xvalue}x${yvalue}^ -gravity ${gravity} -extent "${xvalue}x${yvalue}" -quality 100 "${file_location}"
    nitrogen --head=${index} --save --set-scaled "${file_location}"
}

crop_rimg(){
    monitor="$1"
    index="$2"
    gravity="$3"

    rotated_w="$(monitors_info.sh -D)-$(echo "$(monitors_info.sh -d ${monitor})" | sed 's/x/-/' | bc)"
    rotated_w=$(echo ${rotated_w} | bc)

    xval="$(monitors_info.sh -d "${monitor}" | awk 'BEGIN {FS="x"}; {print $1}')"
    yval="$(monitors_info.sh -d "${monitor}" | awk 'BEGIN {FS="x"}; {print $2}')"

    rescale_dim="$(echo ${rotated_w})x$(echo $(monitors_info.sh -d ${monitor}) | awk 'BEGIN {FS="x"} ; {print $1}')"

    convert "$file" -resize "${rescale_dim}"^ -gravity Center -extent "${rescale_dim}" -quality 100 "tmp_$file"
    convert "$file" -resize "${yval}x${xval}"^ -gravity ${gravity} -extent "${yval}x${xval}" -quality 100 "crp_${index}_$file"

    rm "tmp_$file"
}


while read file
do
    case "$1" in
        "C-r")
            convert -rotate 90 "$file" "$file" ;;
        "C-c")
            echo -n "$file" | xclip -selection clipboard ;;
        "C-w")
            nitrogen --save --set-zoom-fill "$file" ;;
        "C-p") 
            resize_img "$file";;
        "C-o")
            crop_imgs "$file";;
        "C-i")
            crop_rimg "$file";;
        "C-s")
            mv "$file" $HOME/Documents/Pictures/Wallpapers/ultra/shabbat/ ;;
        "C-l")
            cp "$file" $HOME/Documents/Pictures/lock.png ;;
        "C-n")
            mv "$file" $HOME/Documents/Pictures/Wallpapers/night/ ;;
        "C-d")
            mv "$file" $HOME/Documents/Pictures/Wallpapers/day/ ;;
        "C-0")
            nitrogen --head=0 --save --set-scaled --random "$file"
            python $HOME/bin/qtile/wallpapers.py "$file" 0;;
        "C-1")
            nitrogen --head=1 --save --set-scaled --random "$file"
            python $HOME/bin/qtile/wallpapers.py "$file" 1;;
        "C-2")
            nitrogen --head=2 --save --set-scaled --random "$file"
            python $HOME/bin/qtile/wallpapers.py "$file" 2;;
        "C-a")
            rm "$file" ;;
    esac
done
